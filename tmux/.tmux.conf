#To swap tmux vertical pane positions, you can use the following key sequence:
#1. Press `Ctrl + b` to enter tmux command mode.
#2. Press `{` or `}` to swap the current pane with the next or the previous one. The `{` command moves the current pane left and the `}` command moves it right.


#closing a pane with a simple CTRL+x
#bind C-BSpace 'select-pane -L ; select-pane -R; kill-pane; select-layout even-horizontal'
bind BSpace 'select-pane -L ; select-pane -R; kill-pane; select-layout even-horizontal'

#setting up tmux close to go to the left pane when closing current pane (tmux 
#defaults to last-pane, so this makes sure the last pane was the left one)
#manual page https://man7.org/linux/man-pages/man1/tmux.1.html#WINDOWS_AND_PANES
#bind x 'select-pane -L ; select-pane -R; kill-pane; select-layout even-horizontal'
bind C-z 'select-pane -L; kill-pane; select-layout even-horizontal'
bind C-x 'select-pane -R; kill-pane; select-layout even-horizontal'

#MESSING WITH COPY AND PASTE
#searching buffer settings
set-window-option -g mode-keys vi
list-keys -T copy-mode-vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
#bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
#bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'clip.exe'
setw -g mode-keys vi

#this, if uncommneted, will prevent outside applications from adjusting tmux
#set-option -s set-clipboard off

bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X rectangle-toggle
unbind -T copy-mode-vi Enter
#bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -se c -i'

#setting % to automatically split screens evenly
# bind % 'split-window -h -c "#{pane_current_path}"; select-layout even-horizontal'

bind % {
	splitw -h -c '#{pane_current_path}'
	select-layout even-horizontal
}

#bind \ "split-window -v -c "#{pane_current_path}"
set-option -g history-limit 40000

#trying to open up the same neovim file
#bind $ 'split-window -h -c "#{pane_current_path}"; select-layout even-horizontal; nvim testfile'
#bind $ 'split-window -h -c "#{pane_current_path}" && tmux send-keys -t "{last}" "nvim testfile" Enter && select-layout even-horizontal'
#bind $ 'splitw -h nvim #{pane_current_path}/#{buffer_name}'



#unbind-key -a 
# VIM SETUP
#make the escape key in vim not slow
#set -s escape-time 0
set -sg escape-time 0
#set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'
#set-option -gs default-terminal "tmux-256color"
#set-option -gas terminal-overrides "*:Tc"
#set-option -gas terminal-overrides "*:RGB"


#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -se c -i'

#https://stackoverflow.com/questions/10543684/how-can-i-clear-scrollback-buffer-in-tmux
# CLEAR TMUX SCROLLBACK
bind -n C-k clear-history

# COPY TO SYSTEM CLIPBOARD USING XCLIP
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

#set-option -g mouse on
set -g mouse on

#FUNCTIONAL
bind c new-window -c "#{pane_current_path}"
bind C-n new-window -ac "#{pane_current_path}"
#bind C-c new-window -a


# Windows
set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

set -g renumber-windows on    # renumber windows when a window is closed

#bind r source-file ~/.tmux.conf
bind R source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

#commented these out because I'm using C-Left to terminate the left pane
bind-key -r -T prefix       C-Up              resize-pane -U 25
bind-key -r -T prefix       C-Down            resize-pane -D 25
bind-key -r -T prefix       C-Left            resize-pane -L 25
bind-key -r -T prefix       C-Right           resize-pane -R 25

# statusbar
set -g status-position bottom
set -g status-justify left
set -g status-left ''
set -g status-right-length 50
set -g status-left-length 20

#ASTHETIC
#necessary for fixing colors
set -g default-terminal "xterm-256color"

#### COLOUR (Solarized dark)

# default statusbar colors
set-option -g status-style fg=yellow,bg=black #yellow and base02

# default window title colors
set-window-option -g window-status-style fg=brightblue,bg=default #base0 and default
#set-window-option -g window-status-style dim

# active window title colors
set-window-option -g window-status-current-style fg=black,bg=brightblue #orange and default
#set-window-option -g window-status-current-style bright

# pane border
set-option -g pane-border-style fg=black #base02
set-option -g pane-active-border-style fg=brightgreen #base01

# message text
set-option -g message-style fg=brightred,bg=black #orange and base01

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green

# bell
set -g monitor-bell off
set-window-option -g window-status-bell-style fg=black,bg=red #base02, red
# -- display -------------------------------------------------------------------
set-window-option -g status-left " #S "
#set -g prefix2 C-a                        # GNU-Screen compatible prefix
#bind C-a send-prefix -2


#set -g set-titles on          # set terminal title
#set -g set-titles-string "#W"

#attempt to change terminal title, was working before restart
# bind-key '#' command-prompt -p "New Status: " "set -g set-titles-string '%1'"

# bind 'z' switch-client -l

#set -g display-panes-time 800 # slightly longer pane indicators display time
#set -g display-time 1000      # slightly longer status messages display time

#setw -g window-status-format "#{pane_current_path}".
#set -g status-interval 3     # redraw status line every 10 seconds
#set-option -g automatic-rename off
#setw -g automatic-rename off   # rename window to reflect current program

bind-key -n MouseDrag1Status swap-window -t=

## clear both screen and history
#bind -n C-l send-keys C-l \; run 'sleep 0.2' \; clear-history

## activity
#set -g monitor-activity on
#set -g visual-activity off
#bind U run "cut -c3- ~/.tmux.conf | sh -s _urlview #{pane_id}"

bind-key 's' choose-tree -Zs

# PLUGINS
set -g @plugin 'tmux-plugins/tpm'
#this is my attempt to copy text without going back to the prompt. 
set -g @plugin 'tmux-plugins/tmux-yank'
#bind -T copy-mode    C-c send -X copy-pipe-no-clear "xsel -i --clipboard"
#bind -T copy-mode-vi C-c send -X copy-pipe-no-clear "xsel -i --clipboard"
#bind -T copy-mode-vi y send -X copy-pipe-no-clear "xsel -i --clipboard"
#bind -T copy-mode    y send -X copy-pipe-no-clear "xsel -i --clipboard"
#set -g @plugin 'tmux-plugins/tmux-resurrect'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

#if I want to add tmux vim navigtor
#https://thoughtbot.com/blog/seamlessly-navigate-vim-and-tmux-splits
#bind-key -T copy-mode-vi 'C-h' select-pane -L
#bind-key -T copy-mode-vi 'C-j' select-pane -D
#bind-key -T copy-mode-vi 'C-k' select-pane -U
#bind-key -T copy-mode-vi 'C-l' select-pane -R
#bind-key -T copy-mode-vi 'C-\' select-pane -l

set -g pane-border-status bottom
# set -g pane-border-format "#{pane_index} #{pane_current_command}"

# Prompt for pane name and set it manually
# bind-key n command-prompt -p "Pane Name: " "rename-pane '%%'"

# Prompt for pane name and set it manually, then update the pane border format
# bind-key n command-prompt -p "Pane Name: " "run-shell 'update_pane_name.sh #{pane_id} %%'"


set -g focus-events on

# Hook to run a command when the pane changes
# set-hook -g pane-focus-in 'run-shell "/home/ldraney/.pyenv/shims/python /home/ldraney/.tmux/refresh_pane_border.py"'

# bind-key n command-prompt -p "Enter new pane name: " "run-shell '/home/ldraney/.pyenv/shims/python /home/ldraney/.tmux/rename_pane.py %1'"
# bind-key n command-prompt -p "Enter new pane name: " "run-shell '/home/ldraney/.pyenv/shims/python --version'"

# Bind a key to run the customize mode script
bind-key C-c run-shell "/home/ldraney/.pyenv/shims/python ~/.tmux/customize_mode.py"

